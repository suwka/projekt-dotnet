@model WorkshopManager.Models.ServiceOrder

@{
    ViewData["Title"] = "Szczegóły zlecenia serwisowego";
}

<h2>Szczegóły zlecenia serwisowego</h2>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Informacje podstawowe</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Numer zlecenia:</dt>
                    <dd class="col-sm-8">@Model.Id</dd>

                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8"><span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span></dd>
                    
                    <dt class="col-sm-4">Data przyjęcia:</dt>
                    <dd class="col-sm-8">@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</dd>
                    
                    @if (Model.ClosedAt.HasValue)
                    {
                        <dt class="col-sm-4">Data zamknięcia:</dt>
                        <dd class="col-sm-8">@Model.ClosedAt.Value.ToString("dd.MM.yyyy HH:mm")</dd>
                    }
                </dl>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5>Klient i pojazd</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Klient:</dt>
                    <dd class="col-sm-8">
                        @((Model.Vehicle?.Customer?.FirstName + " " + Model.Vehicle?.Customer?.LastName).Trim() ?? "Brak danych klienta")
                        @if (Model.Vehicle?.Customer != null)
                        {
                            <a asp-controller="Receptionist" asp-action="ClientDetails" asp-route-id="@Model.Vehicle.CustomerId" class="btn btn-outline-info btn-sm ms-2">
                                Profil
                            </a>
                        }
                    </dd>
                    
                    <dt class="col-sm-4">Kontakt:</dt>
                    <dd class="col-sm-8">
                        @Model.Vehicle?.Customer?.Phone
                        @if (!string.IsNullOrEmpty(Model.Vehicle?.Customer?.IdentityUser?.Email))
                        {
                            <span class="ms-2">@Model.Vehicle?.Customer?.IdentityUser?.Email</span>
                        }
                    </dd>
                    
                    <dt class="col-sm-4">Pojazd:</dt>
                    <dd class="col-sm-8">@(Model.Vehicle?.Brand + " " + Model.Vehicle?.Model)</dd>
                    
                    <dt class="col-sm-4">Nr rejestracyjny:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.RegistrationNumber</dd>
                    
                    <dt class="col-sm-4">VIN:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.Vin</dd>
                </dl>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5>Szczegóły zlecenia</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Mechanik:</dt>
                    <dd class="col-sm-8">
                        @(Model.AssignedMechanic?.UserName ?? "Nie przypisano mechanika")
                    </dd>
                    
                    <dt class="col-sm-4">Opis problemu:</dt>
                    <dd class="col-sm-8">
                        <p>@Model.ProblemDescription</p>
                    </dd>
                </dl>
            </div>
        </div>

        @if (Model.ServiceTasks != null && Model.ServiceTasks.Any())
        {
            decimal totalLaborCost = Model.ServiceTasks.Sum(t => t.LaborCost);
            decimal totalPartsCost = 0;
            
            // Obliczanie kosztu części
            foreach (var task in Model.ServiceTasks)
            {
                if (task.UsedParts != null)
                {
                    foreach (var usedPart in task.UsedParts)
                    {
                        if (usedPart.Part != null)
                        {
                            totalPartsCost += usedPart.Part.UnitPrice * usedPart.Quantity;
                        }
                    }
                }
            }
            
            decimal totalCost = totalLaborCost + totalPartsCost;
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Podsumowanie kosztów</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Koszt robocizny:</dt>
                        <dd class="col-sm-8">@totalLaborCost.ToString("C")</dd>
                        
                        <dt class="col-sm-4">Koszt części:</dt>
                        <dd class="col-sm-8">@totalPartsCost.ToString("C")</dd>
                        
                        <dt class="col-sm-4 fw-bold">Łączny koszt:</dt>
                        <dd class="col-sm-8 fw-bold">@totalCost.ToString("C")</dd>
                    </dl>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Wykonane czynności serwisowe</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var task in Model.ServiceTasks)
                        {
                            <li class="list-group-item">
                                <h6>@task.Description</h6>
                                <p>Koszt robocizny: @task.LaborCost.ToString("C")</p>
                                @if (task.UsedParts != null && task.UsedParts.Any())
                                {
                                    <div class="mt-2">
                                        <strong>Użyte części:</strong>
                                        <ul>
                                            @foreach (var part in task.UsedParts)
                                            {
                                                decimal partCost = (part.Part?.UnitPrice ?? 0) * part.Quantity;
                                                <li>
                                                    @part.Part?.Name (@part.Quantity szt.) - 
                                                    @((part.Part?.UnitPrice ?? 0).ToString("C")) za szt. = 
                                                    @partCost.ToString("C")
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.Comments != null && Model.Comments.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Komentarze</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var comment in Model.Comments)
                        {
                            <li class="list-group-item">
                                <p>@comment.Content</p>
                                <div class="d-flex justify-content-between">
                                    <small class="text-muted">@comment.Author?.UserName</small>
                                    <small class="text-muted">@comment.Timestamp.ToString("dd.MM.yyyy HH:mm")</small>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }

        <div class="mt-3 d-flex gap-2">
            <a asp-controller="ServiceOrder" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edytuj zlecenie</a>
            <a asp-controller="Receptionist" asp-action="Panel" class="btn btn-secondary">Powrót do panelu recepcjonisty</a>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(ServiceOrderStatus status)
    {
        return status switch
        {
            ServiceOrderStatus.Nowe => "bg-primary",
            ServiceOrderStatus.WTrakcie => "bg-warning",
            ServiceOrderStatus.Zakonczone => "bg-success",
            ServiceOrderStatus.Anulowane => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
