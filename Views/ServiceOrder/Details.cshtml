@model WorkshopManager.Models.ServiceOrder
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Szczegóły zlecenia serwisowego";
    var isMechanic = User.IsInRole("Mechanik");
    var isReceptionist = User.IsInRole("Recepcjonista");
    var isClient = User.IsInRole("Klient");
    var isAdmin = User.IsInRole("Admin");
}

@functions {
    public string GetStatusBadgeClass(WorkshopManager.Models.ServiceOrderStatus status)
    {
        switch (status)
        {
            case WorkshopManager.Models.ServiceOrderStatus.Nowe:
                return "bg-secondary";
            case WorkshopManager.Models.ServiceOrderStatus.WTrakcie:
                return "bg-warning text-dark";
            case WorkshopManager.Models.ServiceOrderStatus.Zakonczone:
                return "bg-success";
            case WorkshopManager.Models.ServiceOrderStatus.Anulowane:
                return "bg-danger";
            default:
                return "bg-secondary";
        }
    }
}

<h2>Szczegóły zlecenia serwisowego</h2>

<div class="row mb-3">
    <div class="col-md-12">
        <div class="btn-group" role="group">
            @if (isReceptionist || isAdmin)
            {
                <a asp-controller="ServiceOrder" asp-action="DownloadPdf" asp-route-id="@Model.Id" class="btn btn-primary">
                    <i class="fas fa-file-pdf"></i> Pobierz raport PDF
                </a>
            }
            @if (isReceptionist)
            {
                <a asp-controller="ServiceOrder" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-secondary ms-2">Edytuj zlecenie</a>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Informacje podstawowe</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Numer zlecenia:</dt>
                    <dd class="col-sm-8">@Model.Id</dd>

                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8"><span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span></dd>

                    <dt class="col-sm-4">Data przyjęcia:</dt>
                    <dd class="col-sm-8">@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</dd>

                    @if (Model.ClosedAt.HasValue)
                    {
                        <dt class="col-sm-4">Data zamknięcia:</dt>
                        <dd class="col-sm-8">@Model.ClosedAt.Value.ToString("dd.MM.yyyy HH:mm")</dd>
                    }

                    <dt class="col-sm-4">Opis problemu:</dt>
                    <dd class="col-sm-8">@Model.ProblemDescription</dd>
                </dl>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5>Dane pojazdu</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">Marka:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.Brand</dd>

                    <dt class="col-sm-4">Model:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.Model</dd>

                    <dt class="col-sm-4">Nr rejestracyjny:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.RegistrationNumber</dd>

                    <dt class="col-sm-4">VIN:</dt>
                    <dd class="col-sm-8">@Model.Vehicle?.Vin</dd>
                </dl>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5>Części i koszty</h5>
            </div>
            <div class="card-body">
                @if (Model.ServiceTasks != null && Model.ServiceTasks.Any() && Model.ServiceTasks.SelectMany(t => t.UsedParts).Any())
                {
                    var usedParts = Model.ServiceTasks.SelectMany(t => t.UsedParts).ToList();
                    decimal totalPartsCost = 0;
                    decimal totalLaborCost = 0;
                <table class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Nazwa części</th>
                            <th>Producent</th>
                            <th>Kod</th>
                            <th>Ilość</th>
                            <th>Cena za szt.</th>
                            <th>Łączny koszt części</th>
                            <th>Koszt usługi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var up in usedParts)
                        {
                            var part = up.Part;
                            decimal partCost = (part?.UnitPrice ?? 0) * up.Quantity;
                            decimal serviceCost = up.ServiceCost ?? 0;
                            totalPartsCost += partCost;
                            totalLaborCost += serviceCost;
                            <tr>
                                <td>@part?.Name</td>
                                <td>@part?.Manufacturer</td>
                                <td>@part?.CatalogNumber</td>
                                <td>@up.Quantity</td>
                                <td>@(part?.UnitPrice.ToString("C"))</td>
                                <td>@partCost.ToString("C")</td>
                                <td>
                                    @serviceCost.ToString("C")
                                    @if (isMechanic)
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-primary ms-2" 
                                                data-bs-toggle="modal" data-bs-target="#editServiceCostModal-@up.Id">
                                            Edytuj
                                        </button>
                                        <!-- Modal dla edycji kosztu usługi -->
                                        <div class="modal fade" id="editServiceCostModal-@up.Id" tabindex="-1" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title">Edycja kosztu usługi</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <form asp-action="UpdateServiceCost" asp-controller="ServiceOrder" method="post">
                                                        <div class="modal-body">
                                                            <input type="hidden" name="usedPartId" value="@up.Id" />
                                                            <input type="hidden" name="orderId" value="@Model.Id" />
                                                            <div class="mb-3">
                                                                <label for="serviceCost-@up.Id" class="form-label">Koszt usługi dla części: @part?.Name</label>
                                                                <input type="number" step="0.01" min="0" class="form-control" 
                                                                       id="serviceCost-@up.Id" name="serviceCost" 
                                                                       value="@up.ServiceCost" required />
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Anuluj</button>
                                                            <button type="submit" class="btn btn-primary">Zapisz zmiany</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="mt-2">
                    <strong>Podsumowanie:</strong><br />
                    Koszt części: <span>@totalPartsCost.ToString("C")</span><br />
                    Koszt robocizny: <span>@totalLaborCost.ToString("C")</span><br />
                    <strong>Łącznie: <span>@(totalPartsCost + totalLaborCost)</span></strong>
                </div>
                }
                else
                {
                    <p>Brak przypisanych części do tego zlecenia.</p>
                }
                @if (isMechanic)
                {
                    <a asp-action="AssignPart" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-primary mt-3">Przypisz część</a>
                }
            </div>
        </div>

        <h4>Komentarze</h4>
        @if (Model.Comments != null && Model.Comments.Any())
        {
            <ul class="list-group mb-3">
                @foreach (var comment in Model.Comments.OrderByDescending(c => c.Timestamp))
                {
                    var role = ((IDictionary<string, string>)ViewBag.CommentRoles).ContainsKey(comment.AuthorId) ? ((IDictionary<string, string>)ViewBag.CommentRoles)[comment.AuthorId] : "Brak roli";
                    string badgeClass = "bg-secondary";
                    if (role.ToLower() == "mechanik") badgeClass = "bg-purple text-white";
                    else if (role.ToLower() == "klient") badgeClass = "bg-info text-white";
                    else if (role.ToLower() == "recepcjonista") badgeClass = "bg-warning text-dark";
                    else if (role.ToLower() == "admin") badgeClass = "bg-danger";
                    <li class="list-group-item position-relative">
                        <div>
                            <span class="badge @badgeClass align-middle" style="margin-right:8px;">@role</span>
                            <strong>@comment.Author?.UserName</strong>
                            <span class="text-muted small">@comment.Timestamp.ToString("dd.MM.yyyy HH:mm")</span>
                            @if(comment.ModifiedAt.HasValue)
                            {
                                <span class="text-muted small"> (edytowano: @comment.ModifiedAt.Value.ToString("dd.MM.yyyy HH:mm"))</span>
                            }
                        </div>
                        <div>@comment.Content</div>
                        @if (comment.AuthorId == UserManager.GetUserId(User))
                        {
                            <div style="position: absolute; right: 10px; bottom: 10px; z-index: 2;">
                                <a asp-action="EditComment" asp-route-id="@comment.Id" class="btn btn-outline-secondary btn-xs" style="font-size: 0.85em; opacity: 0.7; padding: 2px 8px; margin-right: 4px;">Edytuj</a>
                                <form asp-action="DeleteComment" asp-route-id="@comment.Id" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-outline-danger btn-xs" style="font-size: 0.85em; opacity: 0.7; padding: 2px 8px;" onclick="return confirm('Na pewno usunąć komentarz?')">Usuń</button>
                                </form>
                            </div>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <p>Brak komentarzy.</p>
        }
        <form asp-action="AddComment" method="post">
            <input type="hidden" name="orderId" value="@Model.Id" />
            <div class="form-group">
                <label for="newComment">Dodaj komentarz:</label>
                <textarea id="newComment" name="content" class="form-control" rows="3" maxlength="1000" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary mt-2">Dodaj</button>
        </form>
    </div>

    <div class="col-md-4">
        @* Pasek boczny, jeśli potrzebny *@
    </div>
</div>

<div class="mt-4">
    @if (isMechanic)
    {
        <a asp-controller="Mechanic" asp-action="Panel" class="btn btn-secondary">Powrót do panelu mechanika</a>
    }
    @if (isReceptionist)
    {
        <a asp-controller="Receptionist" asp-action="Panel" class="btn btn-secondary">Powrót do panelu recepcjonisty</a>
        <a asp-controller="Receptionist" asp-action="ClientDetails" asp-route-id="@Model.Vehicle.CustomerId" class="btn btn-info">Szczegóły klienta</a>
    }
    @if (isClient)
    {
        <a asp-controller="Client" asp-action="Panel" class="btn btn-secondary">Powrót do panelu klienta</a>
    }
</div>

@section Scripts {
    <script>
        // Skrypt do obsługi modala edycji kosztu usługi, jeśli jest potrzebny
    </script>
}
